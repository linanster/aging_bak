#! /usr/bin/env bash
#
usage=$"Usage: ble-backend 
    -command=starttest -totalcount=num -deviceid=12 -fwversion=123 -mcuversion=456
    -command=nok_ident -maclist=ffff
    -command=nok_ident -maclist=0102
    -command=nok_ident -maclist=stop
    -command=allon
    -command=alloff
    -command=allkickout
    -command=indrgb -color=0/1/2/3
    -command=reset
    -command=broadcast
\n"

if [ $# -eq 0 ]; then
  printf "${usage}"
  exit 1
fi

while [ $# -gt 0 ]; do
  echo "**$***"
  case $1 in
    --help|-h)
      printf "${usage}"
      exit 0
      ;;
    -command=starttest)
      # 1. act as output
      for i in {1..3}; do echo "mimic backend output [$i]"; sleep 1; done;
      # 2. no database insert
      # exit 0
      sleep 1
      # 3. act as failure
      # exit 2
      for i in {1..50}; do
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c20', '010203040506', 11111, 11111, true, true, true, true, now(), 'xxx', true, 0)"
      if [ $i -eq 5 ]; then
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c21', '010203040506', 11111, 11111, false, true, true, true, now(), '222', true, 0)"
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c22', '010203040506', 11111, 21000, true, false, true, true, now(), '222', true, 0)"
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c23', '010203040506', 11111, 11111, true, true, false, true, now(), '222', true, 0)"
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c24', '010203040506', 11111, 11111, true, true, true, false, now(), '222', true, 0)"
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c25', '010203040506', 11111, 11111, true, true, true, true, now(), 'xxx', false, 0)"
      mysql -p123456 -e "INSERT ge.testdatas(devicecode, factorycode, fw_version, rssi_ble1, rssi_ble2, rssi_wifi1, rssi_wifi2, mac_ble, mac_wifi, status_cmd_check1, status_cmd_check2, bool_qualified_signal, bool_qualified_check, bool_qualified_scan, bool_qualified_deviceid, datetime, reserve_str_1, reserve_bool_1, reserve_int_1) VALUES(128, 5, '3.1', -65, -65, -33, -33, 'f4bcda704c26', '010203040506', 11111, 11111, true, true, true, true, now(), 'xxx', true, 1)"
      fi
      done
      sleep 2
      exit 0
      ;;
    -command=allon)
      sleep 5
      exit 0
      ;;
    -command=alloff)
      sleep 5
      exit 0
      ;;
    -command=nok_ident)
      if [ "$2" == "-maclist=ffff" ]; then
          sleep 1
          exit 0
      fi
      if [ "$2" == "-maclist=stop" ]; then
          sleep 1
          exit 0
      fi
      maclist=$(echo "$2" | awk -F= '{print $2}')
      sleep 1
      exit 0
      ;;
    -command=allkickout)
      sleep 5
      exit 0
      ;;
    -command=indrgb)
      if [ "$2" == "-color=0" ]; then
        sleep 1
        exit 0
      elif [ "$2" == "-color=1" ]; then
        sleep 1
        exit 0
      elif [ "$2" == "-color=2" ]; then
        sleep 1
        exit 0
      elif [ "$2" == "-color=3" ]; then
        sleep 1
        exit 0
      else
        echo "invalid parameter"
        exit 1
      fi
      ;;
    -command=reset)
      sleep 3
      exit 0
      ;;
    -command=broadcast)
      echo "blebackend broadcast output"
      sleep 3
      exit 0
      ;;
    *)
      # continue
      shift
      ;;
  esac
  shift || true
done

printf "Invalid input\n"
printf "${usage}"
exit 1
